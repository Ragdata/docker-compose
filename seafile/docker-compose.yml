services:

    seafile-mysql:
        image: mariadb:10.11
        hostname: seafile-mysql
        container_name: seafile-mysql
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "/usr/local/bin/healthcheck.sh", "--connect", "--mariadbupgrade", "--innodb_initialized"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_interval: 10s
            start_period: 1m
        environment:
            MYSQL_ROOT_PASSWORD: ${INIT_SEAFILE_MYSQL_ROOT_PASSWORD}
            MYSQL_LOG_CONSOLE: true
            MARIADB_AUTO_UPGRADE: 1
        networks:
            - seafile
        volumes:
            - "${SEAFILE_MYSQL_VOLUME:-/opt/seafile-mysql/db}:/var/lib/mysql"
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro

    seafile-memcached:
        image: memcached:1.6.29
        hostname: seafile-memcached
        container_name: seafile-memcached
        restart: unless-stopped
        entrypoint: memcached -m 256
        healthcheck:
            test: ["CMD-SHELL", "pidof memcached || exit 1"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_interval: 10s
            start_period: 1m
        networks:
            - seafile
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro

    # seasearch:
    #     image: seafileltd/seasearch:0.9-latest
    #     hostname: seasearch
    #     container_name: seasearch
    #     restart: unless-stopped
    #     healthcheck:
    #         test: ["CMD-SHELL", "pidof seasearch || exit 1"]
    #         interval: 1m
    #         timeout: 10s
    #         retries: 3
    #         start_interval: 10s
    #         start_period: 1m
    #     environment: 
    #         SS_FIRST_ADMIN_USER: ${INIT_SS_ADMIN_USER:-}
    #         SS_FIRST_ADMIN_PASSWORD: ${INIT_SS_ADMIN_PASSWORD:-}
    #         SS_STORAGE_TYPE: ${STORAGE_TYPE:-disk}
    #         SS_MAX_OBJ_CACHE_SIZE: ${CACHE_SIZE:-10GB}
    #         SS_LOG_TO_STDOUT: ${LOG_TO_STDOUT:-false}
    #         SS_LOG_DIR: ${LOG_DIR:-/opt/seasearch/data/log}
    #         SS_LOG_LEVEL: ${LOG_LEVEL:-info}
    #     networks:
    #         seafile:
    #             ipv4_address: ${IPv4_SEARCH}
    #     volumes:
    #         - "${SS_DATA_PATH:-/opt/seasearch-data}:/opt/seasearch/data"
    #         - /etc/localtime:/etc/localtime:ro
    #         - /etc/timezone:/etc/timezone:ro
    
    # seafile-onlyoffice:
    #     image: onlyoffice/documentserver:8.1.0.1
    #     hostname: seafile-onlyoffice
    #     container_name: seafile-onlyoffice
    #     restart: unless-stopped
    #     healthcheck:
    #         test: ["CMD-SHELL", "pidof docservice || exit 1"]
    #         interval: 1m
    #         timeout: 10s
    #         retries: 3
    #         start_interval: 10s
    #         start_period: 1m
    #     environment:
    #         JWT_ENABLED: true
    #         JWT_SECRET: ${ONLYOFFICE_JWT_SECRET}
    #     networks:
    #         - seafile
    #     volumes:
    #         - "onlyoffice-logs:/var/log/onlyoffice"
    #         - "onlyoffice-data:/var/www/onlyoffice/Data"
    #         - "onlyoffice-lib:/var/lib/onlyoffice"
    #         - "onlyoffice-rabbitmq:/var/lib/rabbitmq"
    #         - "onlyoffice-redis:/var/lib/redis"
    #         - "onlyoffice-postgres:/var/lib/postgresql"
    #         - "onlyoffice-fonts:/usr/share/fonts/truetype/custom"

    seadoc:
        image: seafileltd/sdoc-server:1.0-latest
        hostname: seadoc
        container_name: seadoc
        restart: unless-stopped
        depends_on:
            seafile-mysql:
                condition: service_healthy
        healthcheck:
            test: ["CMD-SHELL", "ps aux | grep -v grep | grep seadoc || exit 1"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_interval: 10s
            start_period: 1m
        environment:
            DB_HOST: seafile-mysql
            DB_PORT: 3306
            DB_USER: seafile
            DB_PASSWORD: ${SEAFILE_MYSQL_DB_PASSWORD}
            DB_NAME: seahub_db
            TIME_ZONE: ${TIME_ZONE:-Etc/UTC}
            JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
            NON_ROOT: ${NON_ROOT:-false}
            SEAHUB_SERVICE_URL: ${SEAFILE_SERVER_PROTOCOL:-http}://${SEAFILE_SERVER_HOSTNAME}
        networks:
            - seafile
        volumes:
            - "${SEADOC_VOLUME:-/opt/seadoc-data}:/shared"

    seafile:
        image: seafileltd/seafile-pro-mc:12.0-latest
        hostname: seafile
        container_name: seafile
        restart: unless-stopped
        depends_on:
            seafile-mysql:
                condition: service_healthy
            seafile-memcached:
                condition: service_started
            # seasearch:
            #     condition: service_healthy
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://seafile:80 || exit 1"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_interval: 10s
            start_period: 1m
        environment:
            DB_HOST: seafile-mysql
            DB_PORT: 3306
            DB_USER: ${SEAFILE_MYSQL_DB_USER:-seafile}
            DB_ROOT_PASSWD: ${INIT_SEAFILE_MYSQL_ROOT_PASSWORD}
            DB_PASSWORD: ${SEAFILE_MYSQL_DB_PASSWORD}
            SEAFILE_MYSQL_DB_CCNET_DB_NAME: ccnet_db
            SEAFILE_MYSQL_DB_SEAFILE_DB_NAME: seafile_db
            SEAFILE_MYSQL_DB_SEAHUB_DB_NAME: seahub_db
            TIME_ZONE: ${TIME_ZONE:-Etc/UTC}
            INIT_SEAFILE_ADMIN_EMAIL: ${INIT_SEAFILE_ADMIN_EMAIL:-me@example.com}
            INIT_SEAFILE_ADMIN_PASSWORD: ${INIT_SEAFILE_ADMIN_PASSWORD:-asecret}
            SEAFILE_SERVER_HOSTNAME: ${SEAFILE_SERVER_HOSTNAME}
            SEAFILE_SERVER_PROTOCOL: ${SEAFILE_SERVER_PROTOCOL}
            SITE_ROOT: ${SITE_ROOT:-/}
            NON_ROOT: ${NON_ROOT:-false}
            JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
            SEAFILE_LOG_TO_STDOUT: ${SEAFILE_LOG_TO_STDOUT:-false}
            ENABLE_SEADOC: ${ENABLE_SEADOC:-true}
            SEADOC_SERVER_URL: ${SEAFILE_SERVER_PROTOCOL:-http}://${SEAFILE_SERVER_HOSTNAME}/sdoc-server
        networks:
            seafile:
                ipv4_address: ${IPv4}
        ports:
            - ${HOST_PORT}:80/tcp
            - ${HOST_PORT_SSL}:443/tcp
        volumes:
            - "${SEAFILE_VOLUME:-/opt/seafile-data}:/shared"

volumes:
    ${SEAFILE_MYSQL_VOLUME}:
        name: ${SEAFILE_MYSQL_VOLUME}
        driver: local
    ${SEAFILE_VOLUME}:
        name: ${SEAFILE_VOLUME}
        driver: local
    ${SEADOC_VOLUME}:
        name: ${SEADOC_VOLUME}
        driver: local
    # onlyoffice-logs:
    #     name: onlyoffice-logs
    #     driver: local
    # onlyoffice-data:
    #     name: onlyoffice-data
    #     driver: local
    # onlyoffice-lib:
    #     name: onlyoffice-lib
    #     driver: local
    # onlyoffice-rabbitmq:
    #     name: onlyoffice-rabbitmq
    # onlyoffice-redis:
    #     name: onlyoffice-redis
    # onlyoffice-postgres:
    #     name: onlyoffice-postgres
    # onlyoffice-fonts:
    #     name: onlyoffice-fonts

networks:
    seafile:
        name: seafile
        driver: bridge
        ipam:
            config:
                - subnet: ${SUBNET}
                  gateway: ${GATEWAY}
